
R version 3.0.0 (2013-04-03) -- "Masked Marvel"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## dbColumnInfo test
> ## Initial report was sporadic segfault (Issue 42)
> ## and it was found reproducile under gctorture()
> ## However, test with gctorture() is moved outside the package
> ## because its execution time is too long.
> ##
> ## Assumes that
> ##  a) PostgreSQL is running, and
> ##  b) the current user can connect
> ## both of which are not viable for release but suitable while we test
> ##
> ## Dirk Eddelbuettel, 10 Sep 2009
> 
> ## only run this if this env.var is set correctly
> if (Sys.getenv("POSTGRES_USER") != "" & Sys.getenv("POSTGRES_HOST") != "" & Sys.getenv("POSTGRES_DATABASE") != "") {
+ 
+     ## try to load our module and abort if this fails
+     stopifnot(require(RPostgreSQL))
+ 
+     ## load the PostgresSQL driver
+     drv <- dbDriver("PostgreSQL")
+ 
+     ## connect to the default db
+     con <- dbConnect(drv,
+                      user=Sys.getenv("POSTGRES_USER"),
+                      password=Sys.getenv("POSTGRES_PASSWD"),
+                      host=Sys.getenv("POSTGRES_HOST"),
+                      dbname=Sys.getenv("POSTGRES_DATABASE"),
+                      port=ifelse((p<-Sys.getenv("POSTGRES_PORT"))!="", p, 5432))
+ 
+ 
+     #  create a table
+     dbGetQuery(con, "set client_min_messages to 'WARNING'")
+     res <- dbGetQuery(con, "CREATE TABLE aa (pk integer primary key, v1 float not null, v2 float)" )
+ 
+     ## run a simple query and show the query result
+     res <- dbGetQuery(con, "INSERT INTO aa VALUES(3, 2, NULL)" )
+     res <- dbSendQuery(con, "select pk, v1, v2, v1+v2 from aa")
+     cat("dbColumnInfo\n")
+     print(dbColumnInfo(res))
+     cat("SELECT result\n")
+     df <- fetch(res, n=-1)
+     print(df)
+ 
+     ## cleanup
+     cat("Removing \"AA\"\n")
+     dbRemoveTable(con, "aa")
+     ## and disconnect
+     dbDisconnect(con)
+ }else{
+     cat("Skip.\n")
+ }
Loading required package: RPostgreSQL
Loading required package: DBI
dbColumnInfo
      name  Sclass    type len precision scale nullOK
1       pk integer INTEGER   4        -1    -1  FALSE
2       v1  double  FLOAT8   8        -1    -1  FALSE
3       v2  double  FLOAT8   8        -1    -1   TRUE
4 ?column?  double  FLOAT8   8        -1    -1     NA
SELECT result
  pk v1 v2 ?column?
1  3  2 NA       NA
Removing "AA"
[1] TRUE
> 
> proc.time()
   user  system elapsed 
  0.391   0.039   0.488 
